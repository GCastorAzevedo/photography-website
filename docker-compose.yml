version: "3"

services:
  webserver:
    image: nginx
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx:/etc/nginx/conf.d
      - ./infra/nginx/nginx.html:/var/www/html/index.html
      - ./public:/var/www/html
    environment:
      ENV: development
      VIRTUAL_PORT: 3000
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: photography-website
    container_name: app
    restart: unless-stopped
    tty: true
    ports:
      - "3000:3000"
    environment:
      ENV: develoment
      SERVICE_NAME: app
      VIRTUAL_PROTO: http
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
#
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: digitalocean.com/php
#     container_name: app
#     restart: unless-stopped
#     tty: true
#     environment:
#       SERVICE_NAME: app
#       SERVICE_TAGS: dev
#     working_dir: /var/www
#     networks:
#       - app-network
#
#
# web:
#   image: nginx
#   volumes:
#    - ./templates:/etc/nginx/templates
#   ports:
#    - "8080:80"
#   environment:
#    - NGINX_HOST=foobar.com
#    - NGINX_PORT=80

# version: '3'
# services:

#   #PHP Service
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: digitalocean.com/php
#     container_name: app
#     restart: unless-stopped
#     tty: true
#     environment:
#       SERVICE_NAME: app
#       SERVICE_TAGS: dev
#     working_dir: /var/www
#     networks:
#       - app-network

#   #Nginx Service
#   webserver:
#     image: nginx:alpine
#     container_name: webserver
#     restart: unless-stopped
#     tty: true
#     ports:
#       - "80:80"
#       - "443:443"
#     networks:
#       - app-network

#   #MySQL Service
#   db:
#     image: mysql:5.7.22
#     container_name: db
#     restart: unless-stopped
#     tty: true
#     ports:
#       - "3306:3306"
#     environment:
#       MYSQL_DATABASE: laravel
#       MYSQL_ROOT_PASSWORD: your_mysql_root_password
#       SERVICE_TAGS: dev
#       SERVICE_NAME: mysql
#     networks:
#       - app-network

# #Docker Networks
# networks:
#   app-network:
#     driver: bridge
